\= util.cene (part of Cene Scaffold)
\= Copyright 2016 Ross Angle. Released under the MIT License.

(defn strings-append-later strings then
  (foldl-later str.\;qq[] strings
    (fn state elem then /string-append-later state elem then)
    then))

(def-macro istr home-scope caller-scope my-stx-details args then
  (basic-pure-macro home-scope caller-scope my-stx-details then
  /fn mode caller-scope s mac
  /cast args cons istr args
    err.\;qq[Called istr without enough arguments]
  /cast args nil
    err.\;qq[Called istr with too many arguments]
  /cast istr stx - istr
    err.\;qq[Called istr with an argument that wasn't a stx]
  /let loop
    (fix/fn loop istr
      (case istr
        
        istring-cons prefix interpolation rest
        (cons (c mac str.str /list/c s istring-nil.prefix)
        /cons interpolation
        /c loop rest)
        
        istring-nil suffix
        (list/c mac str.str /list/c s istring-nil.suffix)
        
        err.\;qq[
          Called istr with a value that wasn't an interpolated
          string]))
  /c mac str.strings-append-later /list/c mac str.list /c loop istr))

(defn copy-paths mode in out
  (case (input-path-type mode in)
    
    file-type-directory
    (foldr (input-path-directory-list mode in) (no-effects/nil)
    /fn item then
      (join-effects
        (copy-paths mode
          (input-path-get in item)
          (output-path-get out item))
        then))
    
    file-type-blob
    (output-path-blob-utf-8 out /input-path-blob-utf-8 mode in)
    
  /no-effects/nil))

(defn make-quine mode scope out string-name top-level-vars
  (cast scope scope - def-ns qualify
    err.\;qq[Expected a scope value of type scope]
  /output-path-blob-utf-8 out
  /picky-javascript-quine mode
    (cast
      (procure-constructor-glossary-getdef def-ns
      /c qualify
      /name-of/dexable
        (dex-struct constructor-occurrence /dex-string/nil)
      /constructor-occurrence string-name)
      getdef get def
      err.\;qq[Internal error]
    /cast (c get mode)
      constructor-glossary main-tag proj-source-to-rep
      err.\;qq[Internal error]
    /cexpr-construct main-tag /list)
    top-level-vars))

(defn compile-give-unwrapped-js-effects param js-val body
  (then-js-effects
    (compile-function-js-effects (cons param /nil) body)
  /fn body
  /give-unwrapped-js-effects js-val body))
