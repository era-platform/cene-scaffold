\= build.cene (part of Cene Scaffold)
\= Copyright 2016 Ross Angle. Released under the MIT License.

(def-macro import home-scope caller-scope my-stx-details args then
  (cast caller-scope scope - caller-def-ns caller-qualify
    err.\;qq[Internal error]
  /basic-nil-macro home-scope caller-scope my-stx-details then
  /fn unique-ns s mac
  /get-mode/fn mode
  /let path
    (foldl cli-input-directory.mode args /fn dirname basename
      (cast basename stx - basename
        err.\;qq[Called import with non-syntax]
      /cast basename istring-nil basename
        err.\;qq[
          Called import with something other than a string literal]
      /input-path-get dirname basename))
  /cast
    (foldr (read-all-force/input-path-blob-utf-8 mode path)
      (folding unique-ns /no-effects/nil)
    /fn expr state
      (cast state folding unique-ns launch-rest
        err.\;qq[Internal error]
      /folding (ns-get str.rest unique-ns)
      /join-effects launch-rest
      /let first-ns (ns-get str.first unique-ns)
      /make-promise-later/fn outbox-getdef
      /cast outbox-getdef getdef get-outbox outbox-definer
        err.\;qq[Internal error]
      /compile-expression
        (scope (ns-get str.unique first-ns)
          caller-def-ns caller-qualify)
        expr
        outbox-definer))
    folding unique-ns launch-rest
    err.\;qq[Internal error]
    
    launch-rest))

(import \;qq[util.cene])
(import \;qq[main.cene])
