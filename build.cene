\= build.cene (part of Cene Scaffold)
\= Copyright 2016 Ross Angle. Released under the MIT License.

\= NOTE: This file depends on the following macros:
\=
\= def-macro let fn stx cons c foreign macro-name foldl
\= cli-input-directory cast err input-path-get foldr read-all-force
\= input-path-blob-utf-8 folding no-effects nil ns-get-string str
\= compile-expression join-effects

(def-macro import unique-ns definition-ns my-stx-details args then
  (basic-nil-macro unique-ns definition-ns my-stx-details then
  /fn unique-ns s mac
  /get-mode/fn mode
  /let path
    (foldl cli-input-directory.mode args /fn dirname basename
      (cast basename stx - basename
        err.\;qq[Called import with non-syntax]
      /cast basename istring-nil basename
        err.\;qq[
          Called import with something other than a string literal]
      /input-path-get dirname basename))
  /cast
    (foldr (read-all-force/input-path-blob-utf-8 mode path)
      (folding unique-ns /no-effects/nil)
    /fn expr state
      (cast state folding unique-ns launch-rest
        err.\;qq[Internal error]
      /folding (ns-get-string str.rest unique-ns)
      /join-effects launch-rest
      /let first-ns (ns-get-string str.first unique-ns)
      /compile-expression
        (ns-get-string str.unique first-ns)
        definition-ns
        expr
        (ns-get-string str.outbox first-ns)))
    folding unique-ns launch-rest
    err.\;qq[Internal error]
    
    launch-rest))

(import \;qq[util.cene])
(import \;qq[main.cene])
